import dataclasses
from datetime import datetime
from urllib.parse import urlparse

@dataclasses.dataclass
class Artist:
    """Stores information about the artists YT channel. Represents the `youtube.artists` table

    Attributes
    ----------
    name : str
        The "normal" name of the band
    yt_id : str
        The ID of the YT channel. The URL would look like `youtube.com/channel/[yt_id]`
    """
    name: str
    yt_id: str
    
    def __iter__(self):
        return (getattr(self, field.name) for field in dataclasses.fields(self))

@dataclasses.dataclass
class Song:
    """All of the information about the song and associated YT video

    Attributes
    ----------
    yt_id : str
        The ID of the YT video. The URL would look like `youtube.com/watch?v=[yt_id]`
    mfm_id : str
        A random ID used to keep track of things. Generated by `utils.geUUID()`
    published : str
        The time that the post was created, in UTC. Epoch format
    genre : str
        The genre of the song as provided by YT, these are usually Wikipedia links.
    title : str
        The title of the YT video
    description : str
        The description of the YT video, this includes HTML so make sure u sanitize it
    artist : `datatypes.Artist`
        Information about the YT creator
    thumbnail : str
        A URL to the standard size thumbnail of the video
    viewcount : int
        How many views does the song have when added to the playlist
    duration : int
        How long is the video, in seconds
    """
    yt_id: str
    # mfm_id: str
    published: str
    genre: str
    title: str
    description: str
    artist: Artist
    thumbnail: str
    viewcount: int
    duration: int
    
    def __iter__(self):
        return (getattr(self, field.name) for field in dataclasses.fields(self))
  
@dataclasses.dataclass
class Post:
    """Information about the reddit post

    Attributes
    ----------
    subreddit : str
        The name of the of the subreddit
    published : str
        The date the post was created, in YYYY-MM-DD
    title : str
        The title of the reddit post
    permalink : str
        The ID part of the post's permalink. The url would look like `redd.it\\%permalink%`
    title : str
        The title of the post
    ups : int
        The number of upvotes on the post when it was added to the database
    downs : int
        The number of downvotes on the post when it was added to the database
    yt_id : str
        The ID part of the YT URL, this is not saved to the DB but we use it to pass to the YT API
    """
    subreddit: str
    published: str
    title: str
    permalink: str
    ups: int
    downs: int
    yt_id: str
    
    def __iter__(self):
        return (getattr(self, field.name) for field in dataclasses.fields(self))

@dataclasses.dataclass
class mattfm_item:
    mfm_id: str
    song: Song
    post: Post
    def __iter__(self):
        return (getattr(self, field.name) for field in dataclasses.fields(self))